searchState.loadedDescShard("alloy_provider", 0, "alloy-provider\nA task that polls the provider with <code>eth_getFilterChanges</code>, …\nType alias for a <code>RootProvider</code> using the <code>Http</code> transport and …\nAn identity layer that does nothing.\nRepresents a transaction that is yet to be confirmed a …\nA builder for configuring a pending transaction watcher.\nConfiguration for watching a pending transaction.\nProvider is parameterized with a network and a transport. …\nThe provider constructed by this layer.\nA builder for constructing a <code>Provider</code> from various layers.\nA layering abstraction in the vein of <code>tower::Layer</code>\nType alias for a <code>RootProvider</code> using the <code>Http</code> transport and …\nThe root provider manages the RPC client and the …\nA stack of two providers.\nThis module extends the Ethereum JSON-RPC provider with …\nBlock heartbeat and pending transaction watcher.\nThe inner state of the root provider.\nThe inner state of the root provider.\nThe inner state of the root provider.\nWrap the given provider in the layer’s provider.\nProvider layers.\nEthereum JSON-RPC provider.\nRequire a number of confirmations.\nReturns the root provider.\nThe receiver for the notification.\nOptional timeout for the transaction.\nThe transaction hash.\nThe transaction hash to watch for.\nProvider-related utilities.\nAdmin namespace rpc interface that gives access to several …\nRequests adding the given peer, returning a boolean …\nRequests adding the given peer as a trusted peer, which …\nReturns general information about the node as well as …\nReturns the list of peers currently connected to the node.\nRequests to remove the given peer, returning true if the …\nRequests to remove the given peer, returning a boolean …\nAn identity layer that does nothing.\nThe provider constructed by this layer.\nA builder for constructing a <code>Provider</code> from various layers.\nA layering abstraction in the vein of <code>tower::Layer</code>\nA stack of two providers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWrap the given provider in the layer’s provider.\nAdd a layer to the stack being built. This is similar to …\nChange the network.\nCreate a new <code>Stack</code>.\nCreate a new <code>ProviderBuilder</code>.\nFinish the layer stack by providing a connection string …\nFinish the layer stack by providing a root <code>RpcClient</code>, …\nBuild this provider with an Reqwest HTTP transport.\nBuild this provider with an Hyper HTTP transport.\nBuild this provider with an IPC connection.\nBuild this provider with a websocket connection.\nFinish the layer stack by providing a root <code>Provider</code>, …\nAdd a signer layer to the stack being built.\nAdd gas estimation to the stack being built.\nAdd nonce management to the stack being built.\nAdd preconfigured set of layers handling gas estimation …\nThe size of the block cache.\nMaximum number of retries for fetching a block.\nDefault block number for when we don’t have a block yet.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA heartbeat task that receives blocks and watches for …\nA handle to the heartbeat task.\nRepresents a transaction that is yet to be confirmed a …\nA builder for configuring a pending transaction watcher.\nConfiguration for watching a pending transaction.\nCheck if any transactions have enough confirmations to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new pending transaction builder from the given …\nWaits for the transaction to confirm with the given number …\nHandle a new block by checking if any of the transactions …\nHandle a watch instruction by adding it to the watch list, …\nReturns the inner configuration.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this builder, returning the inner configuration.\nReturns a watcher that always sees the latest block.\nCreate a new heartbeat task.\nCreates a new pending transaction builder.\nCreate a new watch for a transaction.\nGet the next time to reap a transaction. If no reaps, this …\nNotify the waiter.\nReturns the provider.\nOrdered map of transactions to reap at a certain time.\nReap any timeout\nRegisters the watching configuration with the provider.\nReturns the number of confirmations to wait for.\nReturns the number of confirmations to wait for.\nRequire a number of confirmations.\nThe receiver for the notification.\nSets the number of confirmations to wait for.\nSets the number of confirmations to wait for.\nSets the timeout.\nSets the timeout.\nSets the transaction hash.\nSets the transaction hash.\nSpawn the heartbeat task, returning a <code>HeartbeatHandle</code>.\nConsumes this builder, returning the provider and the …\nThe stream of incoming blocks to watch.\nReturns the timeout.\nReturns the timeout.\nOptional timeout for the transaction.\nReturns this transaction’s hash.\nReturns the transaction hash.\nReturns the transaction hash.\nThe transaction hash.\nThe transaction hash to watch for.\nTransactions to watch for.\nOrdered map of transactions waiting for confirmations.\nWaits for the transaction to confirm with the given number …\nWatch for a transaction to be confirmed with the given …\nWraps this configuration with a provider to expose …\nSets the number of confirmations to wait for.\nSets the number of confirmations to wait for.\nSets the timeout.\nSets the timeout.\nSets the transaction hash.\nSets the transaction hash.\nA layer that populates gas related fields in transaction …\nA provider that estimates gas for transactions.\nA provider that manages account nonces.\nA layer that fills nonces on transactions.\nA layer that signs transactions locally.\nA locally-signing provider.\nA layer that populates gas related fields in transaction …\nA provider that estimates gas for transactions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the max_fee_per_gas and max_priority_fee_per_gas to …\nGets the gas_limit to be used in txs.\nGets the gas_price to be used in legacy txs.\nPopulates the gas_limit, max_fee_per_gas and …\nThere are a few ways to obtain the blob base fee for an …\nPopulates the gas_price and only populates the gas_limit …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA provider that manages account nonces.\nA layer that fills nonces on transactions.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA layer that signs transactions locally.\nA locally-signing provider.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new signing layer with the given signer.\nA task that polls the provider with <code>eth_getFilterChanges</code>, …\nProvider is parameterized with a network and a transport. …\nThe root provider manages the RPC client and the …\nThe root provider manages the RPC client and the …\nBoxes the inner client.\nExecute a smart contract call with a transaction request, …\nExecute a smart contract call with a transaction request, …\nExecute a smart contract call with a transaction request …\nExecute a smart contract call with a transaction request …\nReturns the RPC client used to send requests.\nReturns the RPC client used to send requests.\nConnects to a boxed transport with the given connector.\nCreates a new root provider from the provided connection …\nCreate an EIP-2930 access list.\nCreate an EIP-2930 access list.\nTrace the given transaction.\nTrace the given transaction.\nEstimates the EIP1559 <code>maxFeePerGas</code> and <code>maxPriorityFeePerGas</code>…\nEstimates the EIP1559 <code>maxFeePerGas</code> and <code>maxPriorityFeePerGas</code>…\nEstimate the gas needed for a transaction.\nEstimate the gas needed for a transaction.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the accounts in the remote node. This is usually …\nGets the accounts in the remote node. This is usually …\nGets the balance of the account at the specified tag, …\nGets the balance of the account at the specified tag, …\nReturns the base fee per blob gas (blob gas price) in wei.\nReturns the base fee per blob gas (blob gas price) in wei.\nGets a block by either its hash, tag, or number, with full …\nGets a block by either its hash, tag, or number, with full …\nGets a block by its BlockHash, with full transactions or …\nGets a block by its BlockHash, with full transactions or …\nGet a block by its number.\nGet a block by its number.\nGet the last block number available.\nGet the last block number available.\nGets the selected block BlockNumberOrTag receipts.\nGets the selected block BlockNumberOrTag receipts.\nGets the chain ID.\nGets the chain ID.\nGets the client version of the chain client().\nGets the client version of the chain client().\nGets the bytecode located at the corresponding Address.\nGets the bytecode located at the corresponding Address.\nReturns a collection of historical gas information …\nReturns a collection of historical gas information …\nGet a list of values that have been added since the last …\nGet a list of values that have been added since the last …\nGet a list of values that have been added since the last …\nGet a list of values that have been added since the last …\nGets the current gas price in wei.\nGets the current gas price in wei.\nRetrieves a <code>Vec&lt;Log&gt;</code> with the given Filter.\nRetrieves a <code>Vec&lt;Log&gt;</code> with the given Filter.\nReturns a suggestion for the current <code>maxPriorityFeePerGas</code> …\nReturns a suggestion for the current <code>maxPriorityFeePerGas</code> …\nGets the network ID. Same as <code>eth_chainId</code>.\nGets the network ID. Same as <code>eth_chainId</code>.\nGet the account and storage values of the specified …\nGet the account and storage values of the specified …\nGets the specified storage value from Address.\nGets the specified storage value from Address.\nGets the subscription corresponding to the given RPC …\nGets a transaction by its TxHash.\nGets a transaction by its TxHash.\nGets the transaction count (AKA “nonce”) of the …\nGets the transaction count (AKA “nonce”) of the …\nGets a transaction receipt if it exists, by its TxHash.\nGets a transaction receipt if it exists, by its TxHash.\nGets an uncle block through the tag BlockId and index U64.\nGets an uncle block through the tag BlockId and index U64.\nThe inner state of the root provider.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new root provider from the given RPC client.\nNotify the provider that we are interested in new blocks.\nNotify the provider that we are interested in new blocks.\nNotify the provider that we are interested in logs that …\nNotify the provider that we are interested in logs that …\nCreates a new HTTP root provider from the given URL.\nNotify the provider that we are interested in new pending …\nNotify the provider that we are interested in new pending …\nPopulates the legacy gas price field of the given …\nPopulates the legacy gas price field of the given …\nPopulates the EIP-1559 gas price fields of the given …\nPopulates the EIP-1559 gas price fields of the given …\nSends a raw JSON-RPC request.\nSends a raw JSON-RPC request.\nSends a raw JSON-RPC request with type-erased parameters …\nSends a raw JSON-RPC request with type-erased parameters …\nReturns the root provider.\nBroadcasts a raw transaction RLP bytes to the network.\nBroadcasts a raw transaction RLP bytes to the network.\nBroadcasts a transaction to the network.\nBroadcasts a transaction to the network.\nSet the bytecode of a given account.\nSet the bytecode of a given account.\nSubscribe to an RPC event.\nSubscribe to an RPC event.\nSubscribe to a stream of new block headers.\nSubscribe to a stream of new block headers.\nSubscribe to a stream of pending transaction bodies.\nSubscribe to a stream of pending transaction bodies.\nSubscribe to a stream of logs matching given filter.\nSubscribe to a stream of logs matching given filter.\nSubscribe to a stream of pending transaction hashes.\nSubscribe to a stream of pending transaction hashes.\nGets syncing info.\nGets syncing info.\nTrace all transactions in the given block.\nTrace all transactions in the given block.\nExecutes the given transaction and returns a number of …\nExecutes the given transaction and returns a number of …\nTraces multiple transactions on top of the same block, …\nTraces multiple transactions on top of the same block, …\nParity trace transaction.\nParity trace transaction.\nUnsubscribes from the subscription corresponding to the …\nCancels a subscription given the subscription ID.\nCancels a subscription given the subscription ID.\nWatch for new blocks by polling the provider with …\nWatch for new blocks by polling the provider with …\nWatch for new pending transaction bodies by polling the …\nWatch for new pending transaction bodies by polling the …\nWatch for new logs using the given filter by polling the …\nWatch for new logs using the given filter by polling the …\nWatch for the confirmation of a single pending transaction …\nWatch for the confirmation of a single pending transaction …\nWatch for new pending transaction by polling the provider …\nWatch for new pending transaction by polling the provider …\nReturns a <code>Weak</code> RPC client used to send requests.\nReturns a <code>Weak</code> RPC client used to send requests.\nMultiplier for the current base fee to estimate max base …\nThe number of blocks from the past for which the fee …\nThe default percentile of gas premiums that are fetched …\nReturn type of EIP1155 gas fee estimator.\nAn estimator function for EIP1559 fees.\nThe default EIP-1559 fee estimator which is based on the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe base fee per gas.\nThe max priority fee per gas.")